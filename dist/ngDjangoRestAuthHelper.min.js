var helper=angular.module("ngDjangoRestAuthHelper",["ngDjangoRestAuthHelper.services"]);helper.provider("ngDjangoRestAuthHelper",function(){var settings=this.settings={API_URL:"/rest-auth",use_session:!0};this.config=function(newSettings){angular.extend(settings,newSettings)},this.$get=function(){var thisModule=this;({settings:thisModule.settings})}}),helper.run(function(djangoAuth){djangoAuth.initialize(helper.settings.API_URL,helper.settings.use_session)});var helper_services=angular.module("ngDjangoRestAuthHelper.services",[]);helper_services.service("djangoAuth",function($q,$http,$cookies,$rootScope){var service={API_URL:"",use_session:!0,authenticated:null,authPromise:null,request:function(args){$cookies.token&&($http.defaults.headers.common.Authorization="Token "+$cookies.token),params=args.params||{},args=args||{};var deferred=$q.defer(),url=this.API_URL+args.url,method=args.method||"GET",params=params,data=args.data||{};return $http({url:url,withCredentials:this.use_session,method:method.toUpperCase(),headers:{"X-CSRFToken":$cookies.csrftoken},params:params,data:data}).success(angular.bind(this,function(data,status){deferred.resolve(data,status)})).error(angular.bind(this,function(data,status,headers,config){console.log("error syncing with: "+url),data&&(data.status=status),0===status&&(""===data&&(data={},data.status=0,data.non_field_errors=["Could not connect. Please try again."]),null===data&&(data={},data.status=0,data.non_field_errors=["Server timed out. Please try again."])),deferred.reject(data,status,headers,config)})),deferred.promise},register:function(username,password1,password2,email,more){var data={username:username,password1:password1,password2:password2,email:email};return data=angular.extend(data,more),this.request({method:"POST",url:"/registration/",data:data})},login:function(username,password){var djangoAuth=this;return this.request({method:"POST",url:"/login/",data:{username:username,password:password}}).then(function(data){djangoAuth.use_session||($http.defaults.headers.common.Authorization="Token "+data.key,$cookies.token=data.key),djangoAuth.authenticated=!0,$rootScope.$broadcast("djangoAuth.logged_in",data)})},logout:function(){var djangoAuth=this;return this.request({method:"POST",url:"/logout/"}).then(function(){delete $http.defaults.headers.common.Authorization,delete $cookies.token,djangoAuth.authenticated=!1,$rootScope.$broadcast("djangoAuth.logged_out")})},changePassword:function(password1,password2){return this.request({method:"POST",url:"/password/change/",data:{new_password1:password1,new_password2:password2}})},resetPassword:function(email){return this.request({method:"POST",url:"/password/reset/",data:{email:email}})},profile:function(){return this.request({method:"GET",url:"/user/"})},updateProfile:function(data){return this.request({method:"PATCH",url:"/user/",data:data})},verify:function(key){return this.request({method:"POST",url:"/registration/verify-email/",data:{key:key}})},confirmReset:function(uid,token,password1,password2){return this.request({method:"POST",url:"/password/reset/confirm/",data:{uid:uid,token:token,new_password1:password1,new_password2:password2}})},authenticationStatus:function(restrict,force){restrict=restrict||!1,force=force||!1,(null===this.authPromise||force)&&(this.authPromise=this.request({method:"GET",url:"/user/"}));var da=this,getAuthStatus=$q.defer();return null===this.authenticated||force?this.authPromise.then(function(){da.authenticated=!0,getAuthStatus.resolve()},function(){da.authenticated=!1,restrict?getAuthStatus.reject("User is not logged in."):getAuthStatus.resolve()}):this.authenticated===!1&&restrict?getAuthStatus.reject("User is not logged in."):getAuthStatus.resolve(),getAuthStatus.promise},initialize:function(url,sessions){return this.API_URL=url,this.use_session=sessions,this.authenticationStatus()}};return service}),helper_services.service("Validate",function(){return{message:{minlength:"This value is not long enough.",maxlength:"This value is too long.",email:"A properly formatted email address is required.",required:"This field is required."},more_messages:{demo:{required:"Here is a sample alternative required message."}},check_more_messages:function(name,error){return(this.more_messages[name]||[])[error]||null},validation_messages:function(field,form,error_bin){var messages=[];for(var e in form[field].$error)if(form[field].$error[e]){var special_message=this.check_more_messages(field,e);special_message?messages.push(special_message):this.message[e]?messages.push(this.message[e]):messages.push("Error: "+e)}var deduped_messages=[];angular.forEach(messages,function(el){-1===deduped_messages.indexOf(el)&&deduped_messages.push(el)}),error_bin&&(error_bin[field]=deduped_messages)},form_validation:function(form,error_bin){for(var field in form)"$"!=field.substr(0,1)&&this.validation_messages(field,form,error_bin)}}});